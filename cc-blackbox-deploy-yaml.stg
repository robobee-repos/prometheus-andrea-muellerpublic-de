/*
 * Mandatory:
 *
 * vars.blackbox.image.name
 * vars.blackbox.image.version
 * vars.blackbox.limits.cpu
 * vars.blackbox.limits.memory
 * vars.blackbox.requests.cpu
 * vars.blackbox.requests.memory
 * vars.blackbox.modules
 * vars.blackbox.affinityRequired
 * vars.blackbox.allowOnMaster
 * vars.blackbox.tolerations[].key
 * vars.blackbox.tolerations[].effect
 *
 * Optional:
 *
 * vars.blackbox.tolerations[].value
 */

import "affinities.stg"
import "tolerations.stg"

/*
 *
 */
cc-blackbox-deploy-yaml(parent, vars) ::= <<

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: blackbox-r2
  namespace: prometheus-andrea
  labels:
    app: blackbox
    tier: frontend
    group: prometheus-andrea
data:
  config.yml: |-
    modules:
      http_2xx:
        prober: http
        http:
      <vars.blackbox.modules:blackboxModule(parent, vars);separator="\n">

---

apiVersion: v1
kind: Service
metadata:
  name: blackbox
  namespace: prometheus-andrea
  labels:
    app: blackbox
    tier: frontend
    group: prometheus-andrea
spec:
  ports:
  - name: "exporter"
    port: 9115
    targetPort: "exporter"
  selector:
    app: blackbox

---

apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: blackbox
  namespace: prometheus-andrea
  labels:
    app: blackbox
    tier: frontend
    group: prometheus-andrea
spec:
  replicas: 1
  selector:
    matchLabels:
      app: blackbox
      tier: frontend
      group: prometheus-andrea
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: blackbox
        tier: frontend
        group: prometheus-andrea
    spec:
      containers:
      - image: <vars.blackbox.image.name>:<vars.blackbox.image.version>
        name: blackbox
        ports:
        - containerPort: 9115
          name: "exporter"
        livenessProbe:
          tcpSocket:
            port: 9115
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /
            port: 9115
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 10
        resources:
          limits:
            cpu: <vars.blackbox.limits.cpu>
            memory: <vars.blackbox.limits.memory>
          requests:
            cpu: <vars.blackbox.requests.cpu>
            memory: <vars.blackbox.requests.memory>
        volumeMounts:
        - name: config-volume
          mountPath: /etc/blackbox_exporter
      restartPolicy: Always
      volumes:
      - name: config-volume
        configMap:
          name: blackbox-r2
<affinitiesGroup(parent, vars, vars.blackbox.affinityRequired)>
<tolerationMaster(parent, vars, vars.blackbox.allowOnMaster)>
<tolerationsGroup(parent, vars, vars.blackbox.tolerations)>

---

>>

blackboxModule(module, parent, vars) ::= <<
<module.name>:
  <module.value>
>>
